Sub ResumerCCI()

    Dim FileNameCCI As String, FileNamePortefeuille As String
    Dim wbSource As Workbook, wbPortefeuille As Workbook, wbTarget As Workbook
    Dim wsEnt As Worksheet, wsDir As Worksheet, wsGar As Worksheet, wsAss As Worksheet, wsBaseCA As Worksheet, wsTarget As Worksheet
    Dim dictEnt As Object, dictDir As Object, dictGar As Object, dictMont As Object, dictAss As Object, dictSoc As Object
    Dim dictHom As Object
    Dim lastRowEnt As Long, lastRowDir As Long, lastRowGar As Long, lastRowAss As Long, lastRowBaseCA As Long
    Dim i As Long, j As Long
    Dim key As Variant, valeur As Variant, montant As Variant
    Dim colSIREN As Long, colSOC As Long

    ' Étape 1 : Ouvrir explorateur pour sélectionner le fichier source CCI
    FileNameCCI = Application.GetOpenFilename("Fichiers Excel (*.xlsx; *.xlsm; *.xls), *.xlsx; *.xlsm; *.xls", , "Sélectionnez le nouveau fichier CCI")
    If FileNameCCI = "False" Then Exit Sub
    Set wbSource = workbooks.Open(FileNameCCI)

    ' Feuilles source
    Set wsEnt = wbSource.Sheets("Entreprise")
    Set wsDir = wbSource.Sheets("Dirigeant")
    Set wsGar = wbSource.Sheets("Garant")
    Set wsAss = wbSource.Sheets("Assureur")

    ' Dernières lignes
    lastRowEnt = wsEnt.Cells(wsEnt.Rows.Count, 1).End(xlUp).Row
    lastRowDir = wsDir.Cells(wsDir.Rows.Count, 1).End(xlUp).Row
    lastRowGar = wsGar.Cells(wsGar.Rows.Count, 1).End(xlUp).Row
    lastRowAss = wsAss.Cells(wsAss.Rows.Count, 1).End(xlUp).Row

    ' Créer les dictionnaires
    Set dictEnt = CreateObject("Scripting.Dictionary")
    Set dictDir = CreateObject("Scripting.Dictionary")
    Set dictGar = CreateObject("Scripting.Dictionary")
    Set dictMont = CreateObject("Scripting.Dictionary")
    Set dictAss = CreateObject("Scripting.Dictionary")
    Set dictHom = CreateObject("Scripting.Dictionary")

    ' Remplacements pour homonymes (ajoutez/modifiez manuellement ici)
    With dictHom
        .Add "GAL", "GALIAN-SMABTP"
        .Add "GAILIAN", "GALIAN-SMABTP"
        .Add "MMA", "MMA"
        .Add "ALLIANZ", "ALLIANZ"
        .Add "AXA", "AXA"
        .Add "SO C", "SOCAF"
        .Add "SO.", "SOCAF"
        .Add "SOCA", "SOCAF"
        .Add "SOCIETE DE CAUTION", "SOCAF"
        .Add "SOCIÉTÉ DE CAUTION", "SOCAF"
        .Add "QBE", "QBE"
        .Add "GROUPAMA", "GROUPAMA"
        .Add "GENERALI", "GENERALI"
        .Add "CEGC", "CEGC"
        .Add "COMPAGNIE EUR", "CEGC"
        .Add "COMPANIE EUR", "CEGC"
        .Add "LLOYD", "LLOYDS"
        .Add "GROUPEMENT FRANCAIS", "GFC"
        .Add "GFC", "GFC"
        .Add "SMA", "GALIAN-SMABTP"
        .Add "CIC", "CIC"
        .Add "CREDIT IND", "CIC"
        .Add "CAISSE FEDERALE", "CREDIT MUTUEL"
        .Add " LACAISSE FEDERALE", "CREDIT MUTUEL"
        .Add "CAISSE R", "CREDIT AGRICOLE"
        .Add "(CAMCA", "CREDIT AGRICOLE"
        .Add "CREDIT AGRICOLE", "CREDIT AGRICOLE"
        .Add "CAISSE D'ASSURANCES MUTUELLES DU CREDIT AGRICOLE", "CREDIT AGRICOLE"
        .Add "CAISSE D'EPARGNE", "CAISSE D'EPARGNE"
    End With

    ' Map entreprises (Société = Dénomination en colonne 9)
    For i = 2 To lastRowEnt
        key = wsEnt.Cells(i, 1).Value
        If Not dictEnt.Exists(key) Then
            dictEnt.Add key, Array(wsEnt.Cells(i, 10).Value, wsEnt.Cells(i, 8).Value)  ' Société, SIREN
        End If
    Next i

    ' Map dirigeants
    For i = 2 To lastRowDir
        key = wsDir.Cells(i, 2).Value
        If Not dictDir.Exists(key) Then
            valeur = wsDir.Cells(i, 3).Value & " " & LCase(wsDir.Cells(i, 5).Value)
            dictDir.Add key, valeur
        End If
    Next i

    ' Map garants et montants
    For i = 2 To lastRowGar
        key = wsGar.Cells(i, 2).Value ' Identifiant
        Dim nomGarant As String
        nomGarant = UCase(wsGar.Cells(i, 3).Value) ' Nom du garant à normaliser
    
        ' Appliquer remplacement par recherche de mot-clé partiel
        For Each cleHom In dictHom.Keys
            If InStr(1, nomGarant, cleHom, vbTextCompare) > 0 Then
                nomGarant = dictHom(cleHom)
                Exit For
            End If
        Next cleHom
    
        ' Stocke unique (premier trouvé après remplacement)
        If Not dictGar.Exists(key) Then
            dictGar.Add key, nomGarant
        End If
    
        ' Initialiser le montant si nécessaire
        If Not dictMont.Exists(key) Then dictMont.Add key, 0
    
        ' Traitement du montant
        montant = wsGar.Cells(i, 5).Value
        If IsNumeric(montant) Then
            dictMont(key) = dictMont(key) + CDbl(montant)
        End If
    Next i

    ' Map assureurs (ne garder que le premier)
    For i = 2 To lastRowAss
        key = wsAss.Cells(i, 2).Value
        valeur = wsAss.Cells(i, 3).Value
        If Not dictAss.Exists(key) Then
            dictAss.Add key, valeur
        End If
        ' Sinon on ignore les suivants
    Next i

    ' Étape 2 : Ouvrir explorateur pour sélectionner le fichier portefeuille
    FileNamePortefeuille = Application.GetOpenFilename("Fichiers Excel (*.xlsx; *.xlsm; *.xls), *.xlsx; *.xlsm; *.xls", , "Sélectionnez le fichier portefeuille client")
    If FileNamePortefeuille = "False" Then
        MsgBox "Aucun fichier portefeuille sélectionné. N° sociétaire restera vide."
    Else
        Set wbPortefeuille = workbooks.Open(FileNamePortefeuille)
        Set wsBaseCA = wbPortefeuille.Sheets("Base CA")
        lastRowBaseCA = wsBaseCA.Cells(wsBaseCA.Rows.Count, 1).End(xlUp).Row

        ' Trouver colonnes SOC et SIREN
        colSOC = 0: colSIREN = 0
        For i = 1 To wsBaseCA.Cells(1, Columns.Count).End(xlToLeft).Column
            If UCase(Trim(wsBaseCA.Cells(1, i).Value)) = "SOC" Then colSOC = i
            If UCase(Trim(wsBaseCA.Cells(1, i).Value)) = "SIREN" Then colSIREN = i
        Next i

        If colSOC = 0 Or colSIREN = 0 Then
            MsgBox "Colonnes 'SOC' ou 'SIREN' non trouvées dans 'Base CA'. N° sociétaire restera vide."
        Else
            Set dictSoc = CreateObject("Scripting.Dictionary")
            For i = 2 To lastRowBaseCA
                key = wsBaseCA.Cells(i, colSIREN).Value
                If Not dictSoc.Exists(key) Then
                    dictSoc.Add key, wsBaseCA.Cells(i, colSOC).Value
                End If
            Next i
        End If
        wbPortefeuille.Close SaveChanges:=False
    End If

    ' Créer et ouvrir un nouveau classeur pour le résumé
    Set wbTarget = workbooks.Add
    Set wsTarget = wbTarget.Sheets(1)
    wsTarget.Name = "ResumeCCI"
    wsTarget.Cells(1, 1).Resize(1, 8).Value = Array("ID", "N° sociétaire", "Société", "SIREN", "Dirigeant", "Garant", "Montant GF", "Assureur")

    ' Remplir les données
    j = 2
    For Each key In dictEnt.Keys
        wsTarget.Cells(j, 1).Value = key
        wsTarget.Cells(j, 4).Value = dictEnt(key)(1)  ' SIREN
        If Not dictSoc Is Nothing And dictSoc.Exists(wsTarget.Cells(j, 4).Value) Then
            wsTarget.Cells(j, 2).Value = dictSoc(wsTarget.Cells(j, 4).Value)  ' N° sociétaire
        Else
            wsTarget.Cells(j, 2).Value = "NA"
        End If
        wsTarget.Cells(j, 3).Value = dictEnt(key)(0)  ' Société
        If dictDir.Exists(key) Then wsTarget.Cells(j, 5).Value = dictDir(key)
        If dictGar.Exists(key) Then wsTarget.Cells(j, 6).Value = dictGar(key)
        If dictMont.Exists(key) Then wsTarget.Cells(j, 7).Value = dictMont(key)
        If dictAss.Exists(key) Then wsTarget.Cells(j, 8).Value = dictAss(key)
        j = j + 1
    Next

    ' Mise en forme de tableau
    Dim tblRange As Range
    Set tblRange = wsTarget.Range("A1").CurrentRegion
    wsTarget.ListObjects.Add(xlSrcRange, tblRange, , xlYes).Name = "TableauResume"

    ' Centrer colonnes B (N° sociétaire) et D (SIREN)
    wsTarget.Columns("B:B").HorizontalAlignment = xlCenter
    wsTarget.Columns("D:D").HorizontalAlignment = xlCenter

    ' Format comptabilité pour colonne G (Montant GF)
    wsTarget.Columns("G:G").NumberFormat = "#,##0, ""K€"""

    wsTarget.Columns.AutoFit
    wbTarget.Activate  ' Active le nouveau classeur
    MsgBox "Résumé créé et ouvert dans un nouveau classeur."
    wbSource.Close SaveChanges:=False

End Sub
